// HeadusUVLayoutOptions
// Initial code generated by Softimage SDK Wizard
// Executed Sun Aug 26 14:38:01 UTC+0400 2012 by Svyatoslav Shumikhin
// 
// 
// Tip: The wizard only exposes a small subset of the possible controls
// and layout that can be achieved on a Property Page.  To find out more
// please refer to the Object Model reference documentation for PPGLayout, PPG
// and CustomProperty
// 
// Tip: Don't be concerned about achieving the exact ordering of the parameters
// because they can easily be reordered in the second phase.
// Tip: To add a command to this plug-in, right-click in the 
// script editor and choose Tools > Add Command.

var oHeadusPath = XSIUtils.BuildPath("c:", "Program Files (x86)", "headus UVLayout v2 Demo");
var sTempPath = XSIUtils.BuildPath("c:", "temp");

function XSILoadPlugin( in_reg )
{
	in_reg.Author = "Svyatoslav Shumikhin";
	in_reg.URL = "http://www.softimage.ru";
	in_reg.Name = "HeadusUVLayoutOptions";
	in_reg.Major = 1;
	in_reg.Minor = 0;

	in_reg.RegisterProperty("HeadusUVLayoutOptions");
	//RegistrationInsertionPoint - do not remove this line

	return true;
}

function XSIUnloadPlugin( in_reg )
{
	var strPluginName;
	strPluginName = in_reg.Name;
	
	var oPrefs = Application.Preferences;
	var oPrefsUVL = oPrefs.Categories("HeadusUVLayoutOptions");
	if (oPrefsUVL != null)
	{
		DeleteObj(oPrefsUVL);
	}
	
	var fso = new ActiveXObject('Scripting.FileSystemObject');
	var oPrefsPath = XSIUtils.BuildPath(Application.InstallationPath( siUserPath ), "Data", "Preferences", "HeadusUVLayoutOptions.Preset");
	if (fso.FileExists(oPrefsPath))
	{
		fso.DeleteFile(oPrefsPath);
	}

	Application.LogMessage(strPluginName + " has been unloaded.",siVerbose);
	return true;
}

function HeadusUVLayoutOptions_Define( in_ctxt )
{
	var oPSet;
	oPSet = in_ctxt.Source;
	oPSet.AddParameter2("HeadusLocation", siString, oHeadusPath, 0,0,0,0,  false, false, "Headus Folder" );
	oPSet.AddParameter2("TempFolder", siString, sTempPath, 0,0,0,0,  false, false, "Temp Folder" );
	return true;
}

// Tip: Use the "Refresh" option on the Property Page context menu to 
// reload your script changes and re-execute the DefineLayout callback.
function HeadusUVLayoutOptions_DefineLayout( in_ctxt )
{
	var oLayout,oItem;
	oLayout = in_ctxt.Source;
	oLayout.Clear();
	oItem = oLayout.AddItem( "HeadusLocation", "", "Folder" );
	oItem.SetAttribute( siUIInitialDir, oHeadusPath ) ;
	oItem = oLayout.AddItem( "TempFolder", "", "Folder" );
	oItem.SetAttribute( siUIInitialDir, sTempPath ) ;
	return true;
}

function HeadusUVLayoutOptions_OnInit( )
{
	Application.LogMessage("HeadusUVLayoutOptions_OnInit called",siVerbose);
}

function HeadusUVLayoutOptions_OnClosed( )
{
	Application.LogMessage("HeadusUVLayoutOptions_OnClosed called",siVerbose);
}

function HeadusUVLayoutOptions_HeadusLocation_OnChanged( )
{
	Application.LogMessage("HeadusUVLayoutOptions_HeadusLocation_OnChanged called",siVerbose);
	var oParam;
	oParam = PPG.HeadusLocation;
	var paramVal;
	paramVal = oParam.Value;
	Application.LogMessage("New value: " + paramVal,siVerbose);
}

function HeadusUVLayoutOptions_TempFolder_OnChanged( )
{
	Application.LogMessage("HeadusUVLayoutOptions_TempFolder_OnChanged called",siVerbose);
	var oParam;
	oParam = PPG.TempFolder;
	var paramVal;
	paramVal = oParam.Value;
	Application.LogMessage("New value: " + paramVal,siVerbose);
}

